<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="generator" content="pandoc">
  <title></title>
  <meta name="apple-mobile-web-app-capable" content="yes" />
  <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
  <link rel="stylesheet" href="reveal.js/css/reveal.min.css"/>
    <style type="text/css">code{white-space: pre;}</style>
    <style type="text/css">
table.sourceCode, tr.sourceCode, td.lineNumbers, td.sourceCode {
  margin: 0; padding: 0; vertical-align: baseline; border: none; }
table.sourceCode { width: 100%; line-height: 100%; }
td.lineNumbers { text-align: right; padding-right: 4px; padding-left: 4px; color: #aaaaaa; border-right: 1px solid #aaaaaa; }
td.sourceCode { padding-left: 5px; }
code > span.kw { color: #007020; font-weight: bold; }
code > span.dt { color: #902000; }
code > span.dv { color: #40a070; }
code > span.bn { color: #40a070; }
code > span.fl { color: #40a070; }
code > span.ch { color: #4070a0; }
code > span.st { color: #4070a0; }
code > span.co { color: #60a0b0; font-style: italic; }
code > span.ot { color: #007020; }
code > span.al { color: #ff0000; font-weight: bold; }
code > span.fu { color: #06287e; }
code > span.er { color: #ff0000; font-weight: bold; }
    </style>
    <link rel="stylesheet" href="reveal.js/css/theme/simple.css" id="theme">
    <!-- If the query includes 'print-pdf', include the PDF print sheet -->
    <script>
      if( window.location.search.match( /print-pdf/gi ) ) {
        var link = document.createElement( 'link' );
        link.rel = 'stylesheet';
        link.type = 'text/css';
        link.href = 'reveal.js/css/print/pdf.css';
        document.getElementsByTagName( 'head' )[0].appendChild( link );
      }
    </script>
    <!--[if lt IE 9]>
    <script src="reveal.js/lib/js/html5shiv.js"></script>
    <![endif]-->
</head>
<body>
  <div class="reveal">
    <div class="slides">


<section class="slide level1">



</section>
<section id="git-tutorial" class="slide level1">
<h1>Git Tutorial</h1>
<p>Kyle Rogers &amp; Nate Mara</p>
<p>2014-10-22</p>
</section>
<section id="intro" class="slide level1">
<h1>Intro</h1>
<p>Git is a free and open source version control tool.</p>
</section>
<section id="a-brief-history-of-git" class="slide level1">
<h1>A Brief History of Git</h1>
<p>In 2002, the Linux source code began to be managed by BitKeeper (proprietary software).</p>
<p>BitKeeper revoked license for Linux in 2005.</p>
</section>
<section id="requirements" class="slide level1">
<h1>Requirements</h1>
<ul>
<li class="fragment">Distributed</li>
<li class="fragment">Performs efficiently</li>
<li class="fragment">What goes in is what comes out</li>
</ul>
</section>
<section id="git-is-born" class="slide level1">
<h1>Git is Born</h1>
<blockquote>
<p>I'm an egotistical bastard, and I name all my projects after myself. First Linux, now git.</p>
<p>-- Linus Torvalds</p>
</blockquote>
<p>Linus developed Git during a two week coding session. After two months, version 1.0 was released.</p>
<p>Since 2005, has developed into one of the largest source code management tools.</p>
</section>
<section id="basic-terms" class="slide level1">
<h1>Basic Terms</h1>
<h2 id="repository">Repository</h2>
<p>A data structure, that contains, among other things a historical record of changes in the repository.</p>
<h2 id="commit">Commit</h2>
<p>A snapshot of your repository at a specific time.</p>
<h2 id="branch">Branch</h2>
<p>Set of commits, generally used for a single purpose. Branches can be combined with <code class="sourceCode bash"><span class="kw">git</span> merge</code></p>
</section>
<section id="basic-git-workflow" class="slide level1">
<h1>Basic Git Workflow</h1>
<ol>
<li class="fragment">Create repository</li>
<li class="fragment">Clone repository to local system</li>
<li class="fragment">Make changes to files</li>
<li class="fragment">Commit changes to git repository</li>
<li class="fragment">Push commits to remote</li>
</ol>
</section>
<section id="picture-of-file-system" class="slide level1">
<h1>Picture of File System</h1>
<p><img src="images/stages.png" alt="image" /></p>
</section>
<section id="git-commands" class="slide level1">
<h1>Git Commands</h1>
<dl>
<dt><code class="sourceCode bash"><span class="kw">git</span> init</code></dt>
<dd><p>Create a new, empty repository in the current directory</p>
</dd>
<dt><code class="sourceCode bash"><span class="kw">git</span> add <span class="kw">&lt;</span>file<span class="kw">&gt;</span></code></dt>
<dd><p>Add <code class="sourceCode bash"><span class="kw">&lt;file&gt;</span></code> to the staging area. Files in the staging area will be added to the next commit.</p>
</dd>
<dt><code class="sourceCode bash"><span class="kw">git</span> commit -m <span class="st">&#39;&lt;message&gt;&#39;</span></code></dt>
<dd><p>Commit files in the staging area. <code class="sourceCode bash"><span class="kw">&lt;message&gt;</span></code> should be a message that explains the changes made in the commit.</p>
</dd>
<dt><code class="sourceCode bash"><span class="kw">git</span> help <span class="kw">&lt;</span>command<span class="kw">&gt;</span></code></dt>
<dd><p>Get help for the given command</p>
</dd>
</dl>
</section>
<section id="more-git-commands" class="slide level1">
<h1>More Git Commands</h1>
<dl>
<dt><code class="sourceCode bash"><span class="kw">git</span> checkout <span class="kw">&lt;</span>branch<span class="kw">&gt;</span></code></dt>
<dd><p>Switch to the branch identified by <code class="sourceCode bash"><span class="kw">&lt;branch&gt;</span></code>. To create a new branch with this command, add the <code class="sourceCode bash"><span class="kw">-b</span></code> flag.</p>
</dd>
<dt><code class="sourceCode bash"><span class="kw">git</span> checkout <span class="kw">&lt;</span>file<span class="kw">&gt;</span></code></dt>
<dd><p>When a file on disk differs from the version stored in Git, use this to revert <code class="sourceCode bash"><span class="kw">&lt;file&gt;</span></code> to the state stored in Git.</p>
</dd>
<dt><code class="sourceCode bash"><span class="kw">git</span> status</code></dt>
<dd><dl>
<dt>View the current status of the repository. Shows:</dt>
<dd><ul>
<li>current branch</li>
<li>modified files</li>
<li>and more!</li>
</ul>
</dd>
</dl>
</dd>
</dl>
</section>
<section id="first-time-setup" class="slide level1">
<h1>First Time Setup</h1>
<p>Before we do any work with Git, we have to set some settings:</p>
<ol>
<li class="fragment"><code class="sourceCode bash"><span class="kw">git</span> config --global user.name <span class="st">&quot;My Name&quot;</span></code></li>
<li class="fragment"><code class="sourceCode bash"><span class="kw">git</span> config --global user.email email@email.com</code></li>
<li class="fragment"><code class="sourceCode bash"><span class="kw">git</span> config --global core.editor SOME_EDITOR</code></li>
<li class="fragment"><code class="sourceCode bash"><span class="kw">git</span> config --global push.default simple</code></li>
</ol>
</section>
<section id="your-first-git-repo" class="slide level1">
<h1>Your First Git Repo</h1>
<p>Let's create an empty Git repository at <code class="sourceCode bash"><span class="kw">~/git-repo/</span></code></p>
<ol>
<li class="fragment"><code class="sourceCode bash"><span class="kw">mkdir</span> ~/git-repo</code></li>
<li class="fragment"><code class="sourceCode bash"><span class="kw">cd</span> ~/git-repo</code></li>
<li class="fragment"><code class="sourceCode bash"><span class="kw">git</span> init</code></li>
<li class="fragment">Profit!</li>
</ol>
</section>
<section id="your-first-git-commit" class="slide level1">
<h1>Your First Git Commit</h1>
<p>Let's add a readme file to our Git repo:</p>
<ol>
<li class="fragment"><code class="sourceCode bash"><span class="kw">YOUR_EDITOR</span> README.md</code></li>
<li class="fragment"><code class="sourceCode bash"><span class="kw">git</span> add README.md</code></li>
<li class="fragment"><code class="sourceCode bash"><span class="kw">git</span> commit -m <span class="st">&#39;add readme file&#39;</span></code></li>
</ol>
</section>
<section id="what-just-happened" class="slide level1">
<h1>What Just Happened?</h1>
<p>Let's take a minute to look at what we just did:</p>
<ol>
<li class="fragment">Edit a file</li>
<li class="fragment">Add that file to the staging area</li>
<li class="fragment">Commit changes in the staging area to the repository</li>
</ol>
<p>On the next slides, we will look at each step more in depth with the <code class="sourceCode bash"><span class="kw">git</span> status</code> command:</p>
</section>
<section id="what-just-happened-1" class="slide level1">
<h1>What Just Happened?</h1>
<h2 id="edit-file">Edit File</h2>
<pre class="sourceCode bash"><code class="sourceCode bash">$ <span class="kw">vi</span> README.md
$ <span class="kw">git</span> status
<span class="kw">On</span> branch master

<span class="kw">Initial</span> commit

<span class="kw">Untracked</span> files:
  <span class="kw">(use</span> <span class="st">&quot;git add &lt;file&gt;...&quot;</span> to include in what will be committed<span class="kw">)</span>

    <span class="kw">README.md</span>

<span class="kw">nothing</span> added to commit but untracked files present (use <span class="st">&quot;git add&quot;</span> to track)</code></pre>
</section>
<section id="what-just-happened-2" class="slide level1">
<h1>What Just Happened?</h1>
<h2 id="add-file-to-staging-area">Add File To Staging Area</h2>
<pre class="sourceCode bash"><code class="sourceCode bash">$ <span class="kw">git</span> add README.md
$ <span class="kw">git</span> status
<span class="kw">On</span> branch master

<span class="kw">Initial</span> commit

<span class="kw">Changes</span> to be committed:
  <span class="kw">(use</span> <span class="st">&quot;git rm --cached &lt;file&gt;...&quot;</span> to unstage<span class="kw">)</span>

    <span class="kw">new</span> file:   README.md</code></pre>
</section>
<section id="what-just-happened-3" class="slide level1">
<h1>What Just Happened?</h1>
<h2 id="commit-changes-to-repository">Commit Changes to Repository</h2>
<pre class="sourceCode bash"><code class="sourceCode bash">$ <span class="kw">git</span> commit -m <span class="st">&#39;add readme file&#39;</span>
$ <span class="kw">git</span> status
<span class="kw">On</span> branch master
<span class="kw">nothing</span> to commit, working directory clean</code></pre>
</section>
<section id="what-just-happened-4" class="slide level1">
<h1>What Just Happened?</h1>
<h2 id="visual-overview">Visual Overview</h2>
<p><img src="images/file-lifecycle.png" alt="image" /></p>
</section>
<section id="lets-try-something-else" class="slide level1">
<h1>Let's Try Something Else</h1>
<h2 id="remote-repositories">Remote Repositories</h2>
<p>A <em>remote</em> saves the repo to another location such as a server (like GitHub)</p>
<p>Save commits to a remote repository using</p>
<pre class="sourceCode bash"><code class="sourceCode bash">$ <span class="kw">git</span> push origin master</code></pre>
<p>Where 'origin' is the remote's name and 'master' is the current branch's name</p>
</section>
<section id="lets-try-something-else-1" class="slide level1">
<h1>Let's Try Something Else</h1>
<h2 id="branches">Branches</h2>
<p>What many beginner git repos look like:</p>
<p><img src="images/git-linear-branch.png" alt="image" /></p>
</section>
<section id="lets-try-something-else-2" class="slide level1">
<h1>Let's Try Something Else</h1>
<h2 id="branches-1">Branches</h2>
<p>Taking full advantage of git branching</p>
<p><img src="images/git-branching.png" alt="image" /></p>
</section>
    </div>
  </div>


  <script src="reveal.js/lib/js/head.min.js"></script>
  <script src="reveal.js/js/reveal.min.js"></script>

  <script>

      // Full list of configuration options available here:
      // https://github.com/hakimel/reveal.js#configuration
      Reveal.initialize({
        controls: true,
        progress: true,
        history: true,
        center: true,
        theme: Reveal.getQueryHash().theme, // available themes are in /css/theme
        transition: Reveal.getQueryHash().transition || 'default', // default/cube/page/concave/zoom/linear/fade/none

        // Optional libraries used to extend on reveal.js
        dependencies: [
          { src: 'reveal.js/lib/js/classList.js', condition: function() { return !document.body.classList; } },
          { src: 'reveal.js/plugin/zoom-js/zoom.js', async: true, condition: function() { return !!document.body.classList; } },
          { src: 'reveal.js/plugin/notes/notes.js', async: true, condition: function() { return !!document.body.classList; } },
//          { src: 'reveal.js/plugin/search/search.js', async: true, condition: function() { return !!document.body.classList; }, }
//          { src: 'reveal.js/plugin/remotes/remotes.js', async: true, condition: function() { return !!document.body.classList; } }
]});
    </script>
    </body>
</html>
